@model VismaUtvikler.Models.Customer

@{
    ViewBag.Title = Model.FirmName;
}

<h3>Firma opplysninger for <br /> @Model.FirmName</h3>
<hr />
<div>
   
   
   
    <dl class="dl-horizontal">
       

        

        <dt>
            @Html.DisplayNameFor(model => model.Adress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Adress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PostalCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PostalCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FaxNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FaxNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MailAdress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MailAdress)
        </dd>

    </dl>
</div >
<div id="customerType">
    <h4>Kundetype</h4>
    <ul class="list-inline" id="typeList">

    </ul>
</div>
<h4>Kontakt Personer</h4>
<div id="contactPersonContent">
    <button class="btn"> @Html.ActionLink("Legg til ny Kontakt", "NyKontakt",new {id=Model.Id})</button>

  


    <form>
        <label>Fornavn</label>
        <input type="text" value=""class="form-control"/>
        <label>Etternavn</label>

        <input type="text" value=""class="form-control"/>
        <label>Sadresse</label>
        <input type="text" value=""class="form-control"/>
        <label>Postnummer</label>
        <input type="text" value=""class="form-control"/>
        <label>telefon</label>
        <input type="text" value=""class="form-control"/>
        <label>Mai</label>
        <input type="text" value=""class="form-control"/>
    </form>

    


   




    <div id="customerSearchBox" class="form-group" style="float:right">
        <input type="text" name="search" id="search" class="form-control" placeholder="Søk"/>
    </div>

    <table class="table table-sm" id="cpPerson">
        <thead>
        <tr>
            <th>Navn</th>
            <th>Adresse</th>
            <th>Postnummer</th>
            <th>telefon</th>

            <th>Mail adresse</th>
        </tr>
        </thead>
        <tbody id="result"></tbody>
    </table>


</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<input type="hidden" value=@Model.Id id='customerId'>


@section scripts{

    <script>
        $(document).ready(function () {
            var responsedata;

            var customerId = $('#customerId').val();
           


        $.ajax({
            url: "/api/ContactPersons/" + customerId,
                method: "GET",
                dataType: 'json'

        }).done(function (data) {
            responsedata = data;
            if (responsedata.length ==0) {
                $("#contactPersonContent").html('');
                $("#contactPersonContent").append("<div class='alert alert-warning' role='alert'>'<strong>'Advarsel'</strong>' Det er ingen kontaktpersoner registret på denne kunden.</div>")
                    
            }else{
                    console.log(data);
                    $.map(data, function (post, i) {
                        console.log(post)
                        $("#result").append(
                            "<tr class='clickable-row' data-href='#'>" +

                            "<td>" + post.FirstName + " " + post.lastName + "</td>"
                            + "<td>" + post.Adress + "</td><td>" + post.PostalCode + "</td>" +
                            "<td>" + post.PhoneNumber + "</td>" +
                            "<td>" + post.MailAdress + "</td>" +
                           "<td><a href='/CustomerContactPersons/Edit/" + post.Id + "'> <span class='glyphicon glyphicon-pencil'></span></a><button class='btn-link js-delete' data-customer-id=" + post.Id + ">| <span class='glyphicon glyphicon-trash'></span> </td>" +
                            " </tr>"

                        )
                    }
           
                )
            }
                })



        $("#cpPerson").on("click", ".js-delete", function () {
                var button = $(this);
                //bootbx confirm er et alternativ til vanlig confirmbox
                bootbox.confirm("Er du sikker på at du vil slette denne kontaktpersonen?", function(result) {
                    if (result) {

                        $.ajax({
                            url: "/api/ContactPersons/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                console.log("Kontaktpersonen er slettet success!!");
                                button.parents("tr").remove();
                                 responsedata.splice(cp => cp.Id === button.attr("data-customer-id"),1);
                                
                            }
                        })

                    }
                })

            })
            $("#search").keyup(function() {
                //tømmer result tabel for innhold
                $("#result").html('');
                //plasserer verdien i søkefeltet i searchField variablen       
                var searchField = $("#search").val();
                console.log(searchField);
                //lager en regular expressin variable
                var expression = new RegExp(searchField, "i");
                console.log(responsedata);

                $.each(responsedata,
                    function (key, value) {
                        console.log("Logg fra search value",value)
                        if (value.FirstName.search(expression) != -1 || value.lastName.search(expression) != -1 || value.MailAdress.search(expression) != -1 || value.Adress.search(expression) != -1) {
                            $("#result").append("<tr><td>" + value.FirstName+" "+value.lastName+ "</td>" +
                                "<td>" + value.Adress + "</td><td>" + value.PostalCode + "</td>" +
                                "<td>" + value.PhoneNumber + "</td> " +
                                "<td>" + value.MailAdress + "</td> <td>" +
                                "<a href='/CustomerContactPersons/Edit/" + value.Id + "'><span class='glyphicon glyphicon-pencil'></span> " +
                                "</a><button class='btn-link js-delete' data-customer-id=" + value.Id +
                                ">| <span class='glyphicon glyphicon-trash'></span></button>" +
                              
                                "</tr>")
                        }
                    })

            });
            ////KundeType
            console.log("KundeId=", customerId);
            $.ajax({
                url: "/api/CustomerToTypes/"+customerId,
                method: "GET",
                dataType: 'json'

            }).done(function (data) {
               
                var customerTypeList = data;
                console.log("customerTypeList ", customerTypeList);
                if (customerTypeList.length <1) {
                    $("#customerType").html('');
                    $("#customerType").append("<div class='alert alert-danger' role='alert'>'<strong>'   Advarsel   '</strong>'      Det er ingen registrerte kundetyper på denne kunden.</div>")

                } else {
                    console.log(data);
                    $.map(data, function (post, i) {
                            //console.log(post)
                            $("#typeList").append(
                              

                                "<li>" + post.CustomerTypeName + " </li>"
                               

                            )
                        }

                    )
                }
            })


            ////////
            

            
        });
    </script>

}
